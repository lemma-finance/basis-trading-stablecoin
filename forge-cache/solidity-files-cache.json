{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "artifacts",
    "build_infos": "artifacts/build-info",
    "sources": "src",
    "tests": "test/foundry",
    "scripts": "script",
    "libraries": [
      "lib",
      "node_modules"
    ]
  },
  "files": {
    "contracts/LemmaSynth.sol": {
      "lastModificationDate": 1662628381667,
      "contentHash": "1d7fa28c00ce5c302c8a2ada4d78b2d6",
      "sourceName": "contracts/LemmaSynth.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "LemmaSynth": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "LemmaSynth.sol/LemmaSynth.json"
        }
      }
    },
    "contracts/SettlementTokenManager.sol": {
      "lastModificationDate": 1662368537461,
      "contentHash": "20e6d8959aa3248c3256eebf88ac8325",
      "sourceName": "contracts/SettlementTokenManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "SettlementTokenManager": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "SettlementTokenManager.sol/SettlementTokenManager.json"
        }
      }
    },
    "contracts/USDLemma.sol": {
      "lastModificationDate": 1662540061718,
      "contentHash": "460c81ac9586dd2225e1f76c6039328c",
      "sourceName": "contracts/USDLemma.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/ILemmaTreasury.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/ISettlementTokenManager.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "USDLemma": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "USDLemma.sol/USDLemma.json"
        }
      }
    },
    "contracts/interfaces/IERC20Decimals.sol": {
      "lastModificationDate": 1652084466049,
      "contentHash": "46d4b4220860b7575bd22fae7cd315e3",
      "sourceName": "contracts/interfaces/IERC20Decimals.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "IERC20Decimals": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IERC20Decimals.sol/IERC20Decimals.json"
        }
      }
    },
    "contracts/interfaces/ILemmaTreasury.sol": {
      "lastModificationDate": 1661693813757,
      "contentHash": "7fd6584ed043feab0d49ec316258f498",
      "sourceName": "contracts/interfaces/ILemmaTreasury.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "ILemmaTreasury": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ILemmaTreasury.sol/ILemmaTreasury.json"
        }
      }
    },
    "contracts/interfaces/IPerpetualMixDEXWrapper.sol": {
      "lastModificationDate": 1662368537461,
      "contentHash": "78090f66ccdb1cde82068293f7d12c68",
      "sourceName": "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IPerpetualMixDEXWrapper": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IPerpetualMixDEXWrapper.sol/IPerpetualMixDEXWrapper.json"
        }
      }
    },
    "contracts/interfaces/ISettlementTokenManager.sol": {
      "lastModificationDate": 1662368537462,
      "contentHash": "c566a344e8454f8c31106a484438d554",
      "sourceName": "contracts/interfaces/ISettlementTokenManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "ISettlementTokenManager": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ISettlementTokenManager.sol/ISettlementTokenManager.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IAccountBalance.sol": {
      "lastModificationDate": 1653908387126,
      "contentHash": "ebaf4fce17270230dae2f4a05306aceb",
      "sourceName": "contracts/interfaces/Perpetual/IAccountBalance.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IAccountBalance": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IAccountBalance.sol/IAccountBalance.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IBaseToken.sol": {
      "lastModificationDate": 1661332553076,
      "contentHash": "23a2cf8db613b773f8b5bb56f26f9bbb",
      "sourceName": "contracts/interfaces/Perpetual/IBaseToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IBaseToken": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IBaseToken.sol/IBaseToken.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IClearingHouse.sol": {
      "lastModificationDate": 1651122202152,
      "contentHash": "ebb89adbfcd183854517c6f26f832269",
      "sourceName": "contracts/interfaces/Perpetual/IClearingHouse.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IClearingHouse": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IClearingHouse.sol/IClearingHouse.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IClearingHouseConfig.sol": {
      "lastModificationDate": 1651122202152,
      "contentHash": "afc5f8c52d6a49e3b37037d49bf2a08a",
      "sourceName": "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IClearingHouseConfig": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IClearingHouseConfig.sol/IClearingHouseConfig.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IExchange.sol": {
      "lastModificationDate": 1651122202153,
      "contentHash": "2364f3dd06e2a33fe4227b389815d6f8",
      "sourceName": "contracts/interfaces/Perpetual/IExchange.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IExchange": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IExchange.sol/IExchange.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IIndexPrice.sol": {
      "lastModificationDate": 1659259460713,
      "contentHash": "062978cdff6f5efe875c875a591c2b8f",
      "sourceName": "contracts/interfaces/Perpetual/IIndexPrice.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IIndexPrice": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IIndexPrice.sol/IIndexPrice.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IMarketRegistry.sol": {
      "lastModificationDate": 1658762424105,
      "contentHash": "eb3515f91b7985ce06cbf3909aa254ef",
      "sourceName": "contracts/interfaces/Perpetual/IMarketRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IMarketRegistry": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IMarketRegistry.sol/IMarketRegistry.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IPerpVault.sol": {
      "lastModificationDate": 1652084466049,
      "contentHash": "a6649b18b0934424ba54e77000d6f8b1",
      "sourceName": "contracts/interfaces/Perpetual/IPerpVault.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "IPerpVault": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IPerpVault.sol/IPerpVault.json"
        }
      }
    },
    "contracts/interfaces/Perpetual/IUSDLemma.sol": {
      "lastModificationDate": 1662368537462,
      "contentHash": "468412ffe2e6d742ebfc6d830280741f",
      "sourceName": "contracts/interfaces/Perpetual/IUSDLemma.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "IUSDLemma": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IUSDLemma.sol/IUSDLemma.json"
        }
      }
    },
    "contracts/interfaces/eip4626/IEIP4626.sol": {
      "lastModificationDate": 1649860450496,
      "contentHash": "53d6b219639ba0aef1dd052ec8d9593a",
      "sourceName": "contracts/interfaces/eip4626/IEIP4626.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "IEIP4626": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IEIP4626.sol/IEIP4626.json"
        }
      }
    },
    "contracts/libraries/Constant.sol": {
      "lastModificationDate": 1641903398115,
      "contentHash": "cecb03c502ba307c866bd80062cfcbfc",
      "sourceName": "contracts/libraries/Constant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "Constant": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Constant.sol/Constant.json"
        }
      }
    },
    "contracts/libraries/SafeMathExt.sol": {
      "lastModificationDate": 1650875815142,
      "contentHash": "78324b5100bff6bd0c837e47b4037776",
      "sourceName": "contracts/libraries/SafeMathExt.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "SafeMathExt": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "SafeMathExt.sol/SafeMathExt.json"
        }
      }
    },
    "contracts/libraries/Utils.sol": {
      "lastModificationDate": 1641903398115,
      "contentHash": "a19e05b294615162d3ac8a39f36d8fac",
      "sourceName": "contracts/libraries/Utils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "Utils": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Utils.sol/Utils.json"
        }
      }
    },
    "contracts/wrappers/PerpLemmaCommon.sol": {
      "lastModificationDate": 1662539740393,
      "contentHash": "ae652263e70b95f1dfdce1feb9a4fea2",
      "sourceName": "contracts/wrappers/PerpLemmaCommon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "PerpLemmaCommon": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "PerpLemmaCommon.sol/PerpLemmaCommon.json"
        }
      }
    },
    "contracts/xLemmaSynth.sol": {
      "lastModificationDate": 1661332553077,
      "contentHash": "4c57b5328587850bb99dd71291320163",
      "sourceName": "contracts/xLemmaSynth.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/eip4626/IEIP4626.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "xLemmaSynth": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "xLemmaSynth.sol/xLemmaSynth.json"
        }
      }
    },
    "contracts/xUSDL.sol": {
      "lastModificationDate": 1661693813758,
      "contentHash": "0ee0458a6fb8291e590470cdc905059c",
      "sourceName": "contracts/xUSDL.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/eip4626/IEIP4626.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.3",
      "artifacts": {
        "xUSDL": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "xUSDL.sol/xUSDL.json"
        }
      }
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1661693906590,
      "contentHash": "962996f0e05d5218857a538a62d7c47e",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1661693553037,
      "contentHash": "3acd67e1ab7b1ccf0a734f0c64d40f99",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Script.sol/Script.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1661693553037,
      "contentHash": "13aee49ec8a282357c1c77015077c401",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Test.sol/Test.json"
        },
        "stdError": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Test.sol/stdError.json"
        },
        "stdMath": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Test.sol/stdMath.json"
        },
        "stdStorage": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Test.sol/stdStorage.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1661693553037,
      "contentHash": "a86a0ba62f0e0d55ead679a4a83e66f8",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.0",
      "artifacts": {
        "Vm": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Vm.sol/Vm.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1661693553037,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1661693553037,
      "contentHash": "5df91f8e93efbfcccf68973dc1b74a70",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "c3710c32d81af521b63406e1a7829145",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControlUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "AccessControlUpgradeable.sol/AccessControlUpgradeable.json"
        },
        "IAccessControlUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "AccessControlUpgradeable.sol/IAccessControlUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "0961e9d7e3b0767794d82a179f4b88e4",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "OwnableUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "OwnableUpgradeable.sol/OwnableUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "0b5e6ac750415f943d9eeead998f4d1a",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC2771ContextUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ERC2771ContextUpgradeable.sol/ERC2771ContextUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "1ce379e575876793f7b9c64add3f7593",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967UpgradeUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ERC1967UpgradeUpgradeable.sol/ERC1967UpgradeUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "02d4784b119cc80015bef24a5e6bb0ea",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeaconUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IBeaconUpgradeable.sol/IBeaconUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "cbb8386f0120d46d66ff42dffbbc16c1",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Initializable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Initializable.sol/Initializable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "031a7983b11bec7e02de657f47cf507b",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UUPSUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "UUPSUpgradeable.sol/UUPSUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "304d95a6b1f0ca8db842e5fe1f2024a9",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ReentrancyGuardUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ReentrancyGuardUpgradeable.sol/ReentrancyGuardUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "5e56530333366ea985068aee1cdc332f",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20Upgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ERC20Upgradeable.sol/ERC20Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "3a5432b9dfef2ff5c8f58fcc0b1452b2",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Upgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IERC20Upgradeable.sol/IERC20Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "751ef4b010fddf04a9e90de13fe1ffe7",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20MetadataUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IERC20MetadataUpgradeable.sol/IERC20MetadataUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "666c7299c60fa5d63975fee759975c11",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20PermitUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "draft-ERC20PermitUpgradeable.sol/ERC20PermitUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "a1f55644188d9ff2f58dde4074b0d06f",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20PermitUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "draft-IERC20PermitUpgradeable.sol/IERC20PermitUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "761ab93a01d4d5a1a2b308712ab59b40",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20Upgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "SafeERC20Upgradeable.sol/SafeERC20Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "2bd96e8402394a4ae3e1c2f2ab29e7af",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AddressUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "AddressUpgradeable.sol/AddressUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "5a73d7f4dcc0f73231e5599a3935b8cf",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ContextUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ContextUpgradeable.sol/ContextUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "4961a2524a1c70dae08535e239d5eb37",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "CountersUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "CountersUpgradeable.sol/CountersUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "92db084d1a7fc35176205dae79fa7da0",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlotUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "StorageSlotUpgradeable.sol/StorageSlotUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "80d3ad01fbd728e8a0dcde979c610377",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StringsUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "StringsUpgradeable.sol/StringsUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "d3455b01dd8119c4ff3406e45fc5ccf5",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ECDSAUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ECDSAUpgradeable.sol/ECDSAUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "405a0693411c830e614175d31974093c",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "EIP712Upgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "draft-EIP712Upgradeable.sol/EIP712Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "3649e7528117ffc7d8a3ccf199b0c6d8",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165Upgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ERC165Upgradeable.sol/ERC165Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "4db71815975139b4bcedb3b615131302",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165Upgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IERC165Upgradeable.sol/IERC165Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "632b4344bb41466b0f9f5f1c99dc6a97",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeCastUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "SafeCastUpgradeable.sol/SafeCastUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "824ab7c5ce280675c9234007c6fdaa67",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeMathUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "SafeMathUpgradeable.sol/SafeMathUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol": {
      "lastModificationDate": 1649846354036,
      "contentHash": "4a1edf6415df1a67d6b78dc462ef38c2",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedSafeMathUpgradeable": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "SignedSafeMathUpgradeable.sol/SignedSafeMathUpgradeable.json"
        }
      }
    },
    "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
      "lastModificationDate": 1655382856190,
      "contentHash": "a8ba2d37b0107911ae0e3b0e123cbd83",
      "sourceName": "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "IUniswapV3SwapCallback": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "IUniswapV3SwapCallback.sol/IUniswapV3SwapCallback.json"
        }
      }
    },
    "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
      "lastModificationDate": 1655382856210,
      "contentHash": "ffd42687b3db01d30c24213d961fcf9f",
      "sourceName": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol"
      ],
      "versionRequirement": ">=0.7.5",
      "artifacts": {
        "ISwapRouter": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "ISwapRouter.sol/ISwapRouter.json"
        }
      }
    },
    "script/LemmaSynthScript.sol": {
      "lastModificationDate": 1661332553079,
      "contentHash": "efd017c70ff7092e6472749749c623ff",
      "sourceName": "script/LemmaSynthScript.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/LemmaSynth.sol",
        "contracts/SettlementTokenManager.sol",
        "contracts/USDLemma.sol",
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/ILemmaTreasury.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/ISettlementTokenManager.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "contracts/wrappers/PerpLemmaCommon.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "LemmaSynthScript": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "LemmaSynthScript.sol/LemmaSynthScript.json"
        }
      }
    },
    "script/LemmaTestnetScripts.sol": {
      "lastModificationDate": 1661332553079,
      "contentHash": "50c4e26480648e7c03eabd0efe4a8f6a",
      "sourceName": "script/LemmaTestnetScripts.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/LemmaSynth.sol",
        "contracts/SettlementTokenManager.sol",
        "contracts/USDLemma.sol",
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/ILemmaTreasury.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/ISettlementTokenManager.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "contracts/wrappers/PerpLemmaCommon.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "LemmaTestnetScripts": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "LemmaTestnetScripts.sol/LemmaTestnetScripts.json"
        }
      }
    },
    "script/LemmaTestnetScriptsForPerpOnly.sol": {
      "lastModificationDate": 1661332553079,
      "contentHash": "ca5d890c57abfa1ad906121a645daca6",
      "sourceName": "script/LemmaTestnetScriptsForPerpOnly.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/LemmaSynth.sol",
        "contracts/SettlementTokenManager.sol",
        "contracts/USDLemma.sol",
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/ILemmaTreasury.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/ISettlementTokenManager.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "contracts/wrappers/PerpLemmaCommon.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "LemmaTestnetScriptsForPerpOnly": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "LemmaTestnetScriptsForPerpOnly.sol/LemmaTestnetScriptsForPerpOnly.json"
        }
      }
    },
    "script/LemmaTestnetScriptsUsingProxies.sol": {
      "lastModificationDate": 1662368537463,
      "contentHash": "50cc3e779d073825f7a5680122a9c14d",
      "sourceName": "script/LemmaTestnetScriptsUsingProxies.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/LemmaSynth.sol",
        "contracts/SettlementTokenManager.sol",
        "contracts/USDLemma.sol",
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/ILemmaTreasury.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/ISettlementTokenManager.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "contracts/wrappers/PerpLemmaCommon.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "LemmaTestnetScriptsUsingProxies": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "LemmaTestnetScriptsUsingProxies.sol/LemmaTestnetScriptsUsingProxies.json"
        }
      }
    },
    "script/xLemmaSynthDeploy.sol": {
      "lastModificationDate": 1661332553079,
      "contentHash": "9b4d7bf2f77f060ca6a9213b3cb1d7ae",
      "sourceName": "script/xLemmaSynthDeploy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/LemmaSynth.sol",
        "contracts/SettlementTokenManager.sol",
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/interfaces/eip4626/IEIP4626.sol",
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "contracts/wrappers/PerpLemmaCommon.sol",
        "contracts/xLemmaSynth.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "xLemmaSynthDeploy": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "xLemmaSynthDeploy.sol/xLemmaSynthDeploy.json"
        }
      }
    },
    "script/xUSDLDeploy.sol": {
      "lastModificationDate": 1661332553079,
      "contentHash": "8dc616d6c5969a412fdd838868cc6934",
      "sourceName": "script/xUSDLDeploy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/SettlementTokenManager.sol",
        "contracts/USDLemma.sol",
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/ILemmaTreasury.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/ISettlementTokenManager.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/interfaces/eip4626/IEIP4626.sol",
        "contracts/libraries/Constant.sol",
        "contracts/libraries/SafeMathExt.sol",
        "contracts/libraries/Utils.sol",
        "contracts/wrappers/PerpLemmaCommon.sol",
        "contracts/xUSDL.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "xUSDLDeploy": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "xUSDLDeploy.sol/xUSDLDeploy.json"
        }
      }
    },
    "src/Deploy.sol": {
      "lastModificationDate": 1662368537464,
      "contentHash": "255d065484d11d1779b6cfe28e1d05f8",
      "sourceName": "src/Deploy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IExchange.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/interfaces/Perpetual/IUSDLemma.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "Bank": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Deploy.sol/Bank.json"
        },
        "Deploy": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Deploy.sol/Deploy.json"
        },
        "MockUniV3Router": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Deploy.sol/MockUniV3Router.json"
        }
      }
    },
    "test/foundry/Contract.t.sol": {
      "lastModificationDate": 1661332553081,
      "contentHash": "50d8b31837265b42287b877fcae96002",
      "sourceName": "test/foundry/Contract.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IExchange.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/interfaces/Perpetual/IUSDLemma.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "src/Deploy.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "ContractTest": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "Contract.t.sol/ContractTest.json"
        }
      }
    },
    "test/foundry/LemmaSynth.t.sol": {
      "lastModificationDate": 1662368537464,
      "contentHash": "4532ce5ee806f46d89c96d9eea54d861",
      "sourceName": "test/foundry/LemmaSynth.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IExchange.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/interfaces/Perpetual/IUSDLemma.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "src/Deploy.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "LemmaSynthTest": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "LemmaSynth.t.sol/LemmaSynthTest.json"
        }
      }
    },
    "test/foundry/PerpLemma.t.sol": {
      "lastModificationDate": 1662368537464,
      "contentHash": "00d0be589f1722dcb2b7d032188c1260",
      "sourceName": "test/foundry/PerpLemma.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IExchange.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/interfaces/Perpetual/IUSDLemma.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "src/Deploy.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "PerpLemmaCommonTest": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "PerpLemma.t.sol/PerpLemmaCommonTest.json"
        }
      }
    },
    "test/foundry/SettlementTokenManager.t.sol": {
      "lastModificationDate": 1661332553083,
      "contentHash": "671537ba8194f514b4cb912c34a2ff01",
      "sourceName": "test/foundry/SettlementTokenManager.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IExchange.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/interfaces/Perpetual/IUSDLemma.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "src/Deploy.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "SettlementTokenManagerTest": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "SettlementTokenManager.t.sol/SettlementTokenManagerTest.json"
        }
      }
    },
    "test/foundry/USDLemma.t.sol": {
      "lastModificationDate": 1662368537464,
      "contentHash": "d743fc43af73937d981354812ecf1af9",
      "sourceName": "test/foundry/USDLemma.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/interfaces/IERC20Decimals.sol",
        "contracts/interfaces/IPerpetualMixDEXWrapper.sol",
        "contracts/interfaces/Perpetual/IAccountBalance.sol",
        "contracts/interfaces/Perpetual/IBaseToken.sol",
        "contracts/interfaces/Perpetual/IClearingHouse.sol",
        "contracts/interfaces/Perpetual/IClearingHouseConfig.sol",
        "contracts/interfaces/Perpetual/IExchange.sol",
        "contracts/interfaces/Perpetual/IIndexPrice.sol",
        "contracts/interfaces/Perpetual/IMarketRegistry.sol",
        "contracts/interfaces/Perpetual/IPerpVault.sol",
        "contracts/interfaces/Perpetual/IUSDLemma.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "src/Deploy.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "USDLemmaTest": {
          "0.8.3+commit.8d00100c.Darwin.appleclang": "USDLemma.t.sol/USDLemmaTest.json"
        }
      }
    }
  }
}